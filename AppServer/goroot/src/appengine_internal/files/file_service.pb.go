// Code generated by protoc-gen-go from "file_service.proto"
// DO NOT EDIT!

package files

import proto "goprotobuf.googlecode.com/hg/proto"
import "math"
import "os"


// Reference proto, math & os imports to suppress error if they are not otherwise used.
var _ = proto.GetString
var _ = math.Inf
var _ os.Error


type ShuffleEnums_InputFormat int32

const (
	ShuffleEnums_CSV_INPUT                     = 0
	ShuffleEnums_SSTABLE_KEY_VALUE_PROTO_INPUT = 1
	ShuffleEnums_RECORD_INPUT                  = 2
)

var ShuffleEnums_InputFormat_name = map[int32]string{
	0: "CSV_INPUT",
	1: "SSTABLE_KEY_VALUE_PROTO_INPUT",
	2: "RECORD_INPUT",
}
var ShuffleEnums_InputFormat_value = map[string]int32{
	"CSV_INPUT":                     0,
	"SSTABLE_KEY_VALUE_PROTO_INPUT": 1,
	"RECORD_INPUT":                  2,
}

func NewShuffleEnums_InputFormat(x int32) *ShuffleEnums_InputFormat {
	e := ShuffleEnums_InputFormat(x)
	return &e
}
func (x ShuffleEnums_InputFormat) String() string {
	return proto.EnumName(ShuffleEnums_InputFormat_name, int32(x))
}

type ShuffleEnums_OutputFormat int32

const (
	ShuffleEnums_CSV_OUTPUT                       = 0
	ShuffleEnums_SSTABLE_MULTI_VALUE_PROTO_OUTPUT = 1
	ShuffleEnums_RECORD_OUTPUT                    = 2
)

var ShuffleEnums_OutputFormat_name = map[int32]string{
	0: "CSV_OUTPUT",
	1: "SSTABLE_MULTI_VALUE_PROTO_OUTPUT",
	2: "RECORD_OUTPUT",
}
var ShuffleEnums_OutputFormat_value = map[string]int32{
	"CSV_OUTPUT":                       0,
	"SSTABLE_MULTI_VALUE_PROTO_OUTPUT": 1,
	"RECORD_OUTPUT":                    2,
}

func NewShuffleEnums_OutputFormat(x int32) *ShuffleEnums_OutputFormat {
	e := ShuffleEnums_OutputFormat(x)
	return &e
}
func (x ShuffleEnums_OutputFormat) String() string {
	return proto.EnumName(ShuffleEnums_OutputFormat_name, int32(x))
}

type ShuffleEnums_Status int32

const (
	ShuffleEnums_UNKNOWN                      = 1
	ShuffleEnums_RUNNING                      = 2
	ShuffleEnums_SUCCESS                      = 3
	ShuffleEnums_FAILURE                      = 4
	ShuffleEnums_INVALID_INPUT                = 5
	ShuffleEnums_OUTPUT_ALREADY_EXISTS        = 6
	ShuffleEnums_INCORRECT_SHUFFLE_SIZE_BYTES = 7
)

var ShuffleEnums_Status_name = map[int32]string{
	1: "UNKNOWN",
	2: "RUNNING",
	3: "SUCCESS",
	4: "FAILURE",
	5: "INVALID_INPUT",
	6: "OUTPUT_ALREADY_EXISTS",
	7: "INCORRECT_SHUFFLE_SIZE_BYTES",
}
var ShuffleEnums_Status_value = map[string]int32{
	"UNKNOWN":                      1,
	"RUNNING":                      2,
	"SUCCESS":                      3,
	"FAILURE":                      4,
	"INVALID_INPUT":                5,
	"OUTPUT_ALREADY_EXISTS":        6,
	"INCORRECT_SHUFFLE_SIZE_BYTES": 7,
}

func NewShuffleEnums_Status(x int32) *ShuffleEnums_Status {
	e := ShuffleEnums_Status(x)
	return &e
}
func (x ShuffleEnums_Status) String() string {
	return proto.EnumName(ShuffleEnums_Status_name, int32(x))
}

type FileServiceErrors_ErrorCode int32

const (
	FileServiceErrors_OK                               = 0
	FileServiceErrors_API_TEMPORARILY_UNAVAILABLE      = 1
	FileServiceErrors_REQUEST_TOO_LARGE                = 3
	FileServiceErrors_RESPONSE_TOO_LARGE               = 4
	FileServiceErrors_INVALID_FILE_NAME                = 5
	FileServiceErrors_OPERATION_NOT_SUPPORTED          = 6
	FileServiceErrors_IO_ERROR                         = 7
	FileServiceErrors_PERMISSION_DENIED                = 8
	FileServiceErrors_WRONG_CONTENT_TYPE               = 9
	FileServiceErrors_FILE_NOT_OPENED                  = 10
	FileServiceErrors_WRONG_OPEN_MODE                  = 11
	FileServiceErrors_EXCLUSIVE_LOCK_REQUIRED          = 12
	FileServiceErrors_FILE_TEMPORARILY_UNAVAILABLE     = 13
	FileServiceErrors_EXISTENCE_ERROR                  = 100
	FileServiceErrors_FINALIZATION_ERROR               = 101
	FileServiceErrors_UNSUPPORTED_CONTENT_TYPE         = 102
	FileServiceErrors_READ_ONLY                        = 103
	FileServiceErrors_EXCLUSIVE_LOCK_FAILED            = 104
	FileServiceErrors_SEQUENCE_KEY_OUT_OF_ORDER        = 300
	FileServiceErrors_WRONG_KEY_ORDER                  = 400
	FileServiceErrors_OUT_OF_BOUNDS                    = 500
	FileServiceErrors_GLOBS_NOT_SUPPORTED              = 600
	FileServiceErrors_FILE_NAME_NOT_SPECIFIED          = 701
	FileServiceErrors_FILE_NAME_SPECIFIED              = 702
	FileServiceErrors_FILE_ALREADY_EXISTS              = 703
	FileServiceErrors_UNSUPPORTED_FILE_SYSTEM          = 704
	FileServiceErrors_INVALID_PARAMETER                = 705
	FileServiceErrors_SHUFFLER_INTERNAL_ERROR          = 800
	FileServiceErrors_SHUFFLE_REQUEST_TOO_LARGE        = 801
	FileServiceErrors_SHUFFLER_TEMPORARILY_UNAVAILABLE = 900
	FileServiceErrors_MAX_ERROR_CODE                   = 9999
)

var FileServiceErrors_ErrorCode_name = map[int32]string{
	0:    "OK",
	1:    "API_TEMPORARILY_UNAVAILABLE",
	3:    "REQUEST_TOO_LARGE",
	4:    "RESPONSE_TOO_LARGE",
	5:    "INVALID_FILE_NAME",
	6:    "OPERATION_NOT_SUPPORTED",
	7:    "IO_ERROR",
	8:    "PERMISSION_DENIED",
	9:    "WRONG_CONTENT_TYPE",
	10:   "FILE_NOT_OPENED",
	11:   "WRONG_OPEN_MODE",
	12:   "EXCLUSIVE_LOCK_REQUIRED",
	13:   "FILE_TEMPORARILY_UNAVAILABLE",
	100:  "EXISTENCE_ERROR",
	101:  "FINALIZATION_ERROR",
	102:  "UNSUPPORTED_CONTENT_TYPE",
	103:  "READ_ONLY",
	104:  "EXCLUSIVE_LOCK_FAILED",
	300:  "SEQUENCE_KEY_OUT_OF_ORDER",
	400:  "WRONG_KEY_ORDER",
	500:  "OUT_OF_BOUNDS",
	600:  "GLOBS_NOT_SUPPORTED",
	701:  "FILE_NAME_NOT_SPECIFIED",
	702:  "FILE_NAME_SPECIFIED",
	703:  "FILE_ALREADY_EXISTS",
	704:  "UNSUPPORTED_FILE_SYSTEM",
	705:  "INVALID_PARAMETER",
	800:  "SHUFFLER_INTERNAL_ERROR",
	801:  "SHUFFLE_REQUEST_TOO_LARGE",
	900:  "SHUFFLER_TEMPORARILY_UNAVAILABLE",
	9999: "MAX_ERROR_CODE",
}
var FileServiceErrors_ErrorCode_value = map[string]int32{
	"OK": 0,
	"API_TEMPORARILY_UNAVAILABLE":      1,
	"REQUEST_TOO_LARGE":                3,
	"RESPONSE_TOO_LARGE":               4,
	"INVALID_FILE_NAME":                5,
	"OPERATION_NOT_SUPPORTED":          6,
	"IO_ERROR":                         7,
	"PERMISSION_DENIED":                8,
	"WRONG_CONTENT_TYPE":               9,
	"FILE_NOT_OPENED":                  10,
	"WRONG_OPEN_MODE":                  11,
	"EXCLUSIVE_LOCK_REQUIRED":          12,
	"FILE_TEMPORARILY_UNAVAILABLE":     13,
	"EXISTENCE_ERROR":                  100,
	"FINALIZATION_ERROR":               101,
	"UNSUPPORTED_CONTENT_TYPE":         102,
	"READ_ONLY":                        103,
	"EXCLUSIVE_LOCK_FAILED":            104,
	"SEQUENCE_KEY_OUT_OF_ORDER":        300,
	"WRONG_KEY_ORDER":                  400,
	"OUT_OF_BOUNDS":                    500,
	"GLOBS_NOT_SUPPORTED":              600,
	"FILE_NAME_NOT_SPECIFIED":          701,
	"FILE_NAME_SPECIFIED":              702,
	"FILE_ALREADY_EXISTS":              703,
	"UNSUPPORTED_FILE_SYSTEM":          704,
	"INVALID_PARAMETER":                705,
	"SHUFFLER_INTERNAL_ERROR":          800,
	"SHUFFLE_REQUEST_TOO_LARGE":        801,
	"SHUFFLER_TEMPORARILY_UNAVAILABLE": 900,
	"MAX_ERROR_CODE":                   9999,
}

func NewFileServiceErrors_ErrorCode(x int32) *FileServiceErrors_ErrorCode {
	e := FileServiceErrors_ErrorCode(x)
	return &e
}
func (x FileServiceErrors_ErrorCode) String() string {
	return proto.EnumName(FileServiceErrors_ErrorCode_name, int32(x))
}

type FileContentType_ContentType int32

const (
	FileContentType_RAW               = 0
	FileContentType_ORDERED_KEY_VALUE = 2
	FileContentType_INVALID_TYPE      = 127
)

var FileContentType_ContentType_name = map[int32]string{
	0:   "RAW",
	2:   "ORDERED_KEY_VALUE",
	127: "INVALID_TYPE",
}
var FileContentType_ContentType_value = map[string]int32{
	"RAW":               0,
	"ORDERED_KEY_VALUE": 2,
	"INVALID_TYPE":      127,
}

func NewFileContentType_ContentType(x int32) *FileContentType_ContentType {
	e := FileContentType_ContentType(x)
	return &e
}
func (x FileContentType_ContentType) String() string {
	return proto.EnumName(FileContentType_ContentType_name, int32(x))
}

type OpenRequest_OpenMode int32

const (
	OpenRequest_APPEND = 1
	OpenRequest_READ   = 2
)

var OpenRequest_OpenMode_name = map[int32]string{
	1: "APPEND",
	2: "READ",
}
var OpenRequest_OpenMode_value = map[string]int32{
	"APPEND": 1,
	"READ":   2,
}

func NewOpenRequest_OpenMode(x int32) *OpenRequest_OpenMode {
	e := OpenRequest_OpenMode(x)
	return &e
}
func (x OpenRequest_OpenMode) String() string {
	return proto.EnumName(OpenRequest_OpenMode_name, int32(x))
}

type StringProto struct {
	Value            *string "PB(bytes,1,req,name=value)"
	XXX_unrecognized []byte
}

func (this *StringProto) Reset() {
	*this = StringProto{}
}

type Integer32Proto struct {
	Value            *int32 "PB(varint,1,req,name=value)"
	XXX_unrecognized []byte
}

func (this *Integer32Proto) Reset() {
	*this = Integer32Proto{}
}

type Integer64Proto struct {
	Value            *int64 "PB(varint,1,req,name=value)"
	XXX_unrecognized []byte
}

func (this *Integer64Proto) Reset() {
	*this = Integer64Proto{}
}

type BoolProto struct {
	Value            *bool "PB(varint,1,req,name=value)"
	XXX_unrecognized []byte
}

func (this *BoolProto) Reset() {
	*this = BoolProto{}
}

type DoubleProto struct {
	Value            *float64 "PB(fixed64,1,req,name=value)"
	XXX_unrecognized []byte
}

func (this *DoubleProto) Reset() {
	*this = DoubleProto{}
}

type BytesProto struct {
	Value            []byte "PB(bytes,1,req,name=value)"
	XXX_unrecognized []byte
}

func (this *BytesProto) Reset() {
	*this = BytesProto{}
}

type VoidProto struct {
	XXX_unrecognized []byte
}

func (this *VoidProto) Reset() {
	*this = VoidProto{}
}

type ShuffleEnums struct {
	XXX_unrecognized []byte
}

func (this *ShuffleEnums) Reset() {
	*this = ShuffleEnums{}
}

type ShuffleInputSpecification struct {
	Format           *ShuffleEnums_InputFormat "PB(varint,1,opt,name=format,enum=files.ShuffleEnums_InputFormat,def=0)"
	Path             *string                   "PB(bytes,2,req,name=path)"
	XXX_unrecognized []byte
}

func (this *ShuffleInputSpecification) Reset() {
	*this = ShuffleInputSpecification{}
}

const Default_ShuffleInputSpecification_Format ShuffleEnums_InputFormat = ShuffleEnums_CSV_INPUT

type ShuffleOutputSpecification struct {
	Format           *ShuffleEnums_OutputFormat "PB(varint,1,opt,name=format,enum=files.ShuffleEnums_OutputFormat,def=0)"
	PathBase         *string                    "PB(bytes,2,req,name=path_base)"
	XXX_unrecognized []byte
}

func (this *ShuffleOutputSpecification) Reset() {
	*this = ShuffleOutputSpecification{}
}

const Default_ShuffleOutputSpecification_Format ShuffleEnums_OutputFormat = ShuffleEnums_CSV_OUTPUT

type FileServiceErrors struct {
	XXX_unrecognized []byte
}

func (this *FileServiceErrors) Reset() {
	*this = FileServiceErrors{}
}

type KeyValue struct {
	Key              *string "PB(bytes,1,req,name=key)"
	Value            *string "PB(bytes,2,req,name=value)"
	XXX_unrecognized []byte
}

func (this *KeyValue) Reset() {
	*this = KeyValue{}
}

type KeyValues struct {
	Key              *string  "PB(bytes,1,req,name=key)"
	Value            []string "PB(bytes,2,rep,name=value)"
	XXX_unrecognized []byte
}

func (this *KeyValues) Reset() {
	*this = KeyValues{}
}

type FileContentType struct {
	XXX_unrecognized []byte
}

func (this *FileContentType) Reset() {
	*this = FileContentType{}
}

type CreateRequest struct {
	Filesystem            *string                      "PB(bytes,1,req,name=filesystem)"
	ContentType           *FileContentType_ContentType "PB(varint,2,req,name=content_type,enum=files.FileContentType_ContentType)"
	Filename              *string                      "PB(bytes,3,opt,name=filename)"
	Parameters            []*CreateRequest_Parameter   "PB(bytes,4,rep,name=parameters)"
	ExpirationTimeSeconds *int64                       "PB(varint,5,opt,name=expiration_time_seconds)"
	XXX_unrecognized      []byte
}

func (this *CreateRequest) Reset() {
	*this = CreateRequest{}
}

type CreateRequest_Parameter struct {
	Name             *string "PB(bytes,1,req,name=name)"
	Value            *string "PB(bytes,2,req,name=value)"
	XXX_unrecognized []byte
}

func (this *CreateRequest_Parameter) Reset() {
	*this = CreateRequest_Parameter{}
}

type CreateResponse struct {
	Filename         *string "PB(bytes,1,req,name=filename)"
	XXX_unrecognized []byte
}

func (this *CreateResponse) Reset() {
	*this = CreateResponse{}
}

type OpenRequest struct {
	Filename             *string                      "PB(bytes,1,req,name=filename)"
	ContentType          *FileContentType_ContentType "PB(varint,2,req,name=content_type,enum=files.FileContentType_ContentType)"
	OpenMode             *OpenRequest_OpenMode        "PB(varint,3,req,name=open_mode,enum=files.OpenRequest_OpenMode)"
	ExclusiveLock        *bool                        "PB(varint,4,opt,name=exclusive_lock,def=0)"
	BufferedOutput       *bool                        "PB(varint,5,opt,name=buffered_output,def=0)"
	OpenLeaseTimeSeconds *int32                       "PB(varint,6,opt,name=open_lease_time_seconds,def=30)"
	XXX_unrecognized     []byte
}

func (this *OpenRequest) Reset() {
	*this = OpenRequest{}
}

const Default_OpenRequest_ExclusiveLock bool = false
const Default_OpenRequest_BufferedOutput bool = false
const Default_OpenRequest_OpenLeaseTimeSeconds int32 = 30

type OpenResponse struct {
	XXX_unrecognized []byte
}

func (this *OpenResponse) Reset() {
	*this = OpenResponse{}
}

type CloseRequest struct {
	Filename         *string "PB(bytes,1,req,name=filename)"
	Finalize         *bool   "PB(varint,2,opt,name=finalize,def=0)"
	XXX_unrecognized []byte
}

func (this *CloseRequest) Reset() {
	*this = CloseRequest{}
}

const Default_CloseRequest_Finalize bool = false

type CloseResponse struct {
	XXX_unrecognized []byte
}

func (this *CloseResponse) Reset() {
	*this = CloseResponse{}
}

type FileStat struct {
	Filename         *string                      "PB(bytes,1,req,name=filename)"
	ContentType      *FileContentType_ContentType "PB(varint,2,req,name=content_type,enum=files.FileContentType_ContentType)"
	Finalized        *bool                        "PB(varint,3,req,name=finalized)"
	Length           *int64                       "PB(varint,4,opt,name=length)"
	Ctime            *int64                       "PB(varint,5,opt,name=ctime)"
	Mtime            *int64                       "PB(varint,6,opt,name=mtime)"
	XXX_unrecognized []byte
}

func (this *FileStat) Reset() {
	*this = FileStat{}
}

type StatRequest struct {
	Filename         *string "PB(bytes,1,opt,name=filename)"
	FileGlob         *string "PB(bytes,2,opt,name=file_glob)"
	XXX_unrecognized []byte
}

func (this *StatRequest) Reset() {
	*this = StatRequest{}
}

type StatResponse struct {
	Stat             []*FileStat "PB(bytes,1,rep,name=stat)"
	MoreFilesFound   *bool       "PB(varint,2,req,name=more_files_found,def=0)"
	XXX_unrecognized []byte
}

func (this *StatResponse) Reset() {
	*this = StatResponse{}
}

const Default_StatResponse_MoreFilesFound bool = false

type AppendRequest struct {
	Filename         *string "PB(bytes,1,req,name=filename)"
	Data             []byte  "PB(bytes,2,req,name=data)"
	SequenceKey      *string "PB(bytes,3,opt,name=sequence_key)"
	XXX_unrecognized []byte
}

func (this *AppendRequest) Reset() {
	*this = AppendRequest{}
}

type AppendResponse struct {
	XXX_unrecognized []byte
}

func (this *AppendResponse) Reset() {
	*this = AppendResponse{}
}

type AppendKeyValueRequest struct {
	Filename         *string "PB(bytes,1,req,name=filename)"
	Key              []byte  "PB(bytes,2,req,name=key)"
	Value            []byte  "PB(bytes,3,req,name=value)"
	XXX_unrecognized []byte
}

func (this *AppendKeyValueRequest) Reset() {
	*this = AppendKeyValueRequest{}
}

type AppendKeyValueResponse struct {
	XXX_unrecognized []byte
}

func (this *AppendKeyValueResponse) Reset() {
	*this = AppendKeyValueResponse{}
}

type DeleteRequest struct {
	Filename         *string "PB(bytes,1,req,name=filename)"
	XXX_unrecognized []byte
}

func (this *DeleteRequest) Reset() {
	*this = DeleteRequest{}
}

type DeleteResponse struct {
	XXX_unrecognized []byte
}

func (this *DeleteResponse) Reset() {
	*this = DeleteResponse{}
}

type ReadRequest struct {
	Filename         *string "PB(bytes,1,req,name=filename)"
	Pos              *int64  "PB(varint,2,req,name=pos)"
	MaxBytes         *int64  "PB(varint,3,req,name=max_bytes)"
	XXX_unrecognized []byte
}

func (this *ReadRequest) Reset() {
	*this = ReadRequest{}
}

type ReadResponse struct {
	Data             []byte "PB(bytes,1,req,name=data)"
	XXX_unrecognized []byte
}

func (this *ReadResponse) Reset() {
	*this = ReadResponse{}
}

type ReadKeyValueRequest struct {
	Filename         *string "PB(bytes,1,req,name=filename)"
	StartKey         []byte  "PB(bytes,2,req,name=start_key)"
	MaxBytes         *int64  "PB(varint,3,req,name=max_bytes)"
	ValuePos         *int64  "PB(varint,4,opt,name=value_pos)"
	XXX_unrecognized []byte
}

func (this *ReadKeyValueRequest) Reset() {
	*this = ReadKeyValueRequest{}
}

type ReadKeyValueResponse struct {
	Data             []*ReadKeyValueResponse_KeyValue "PB(bytes,1,rep,name=data)"
	NextKey          []byte                           "PB(bytes,2,opt,name=next_key)"
	TruncatedValue   *bool                            "PB(varint,3,opt,name=truncated_value)"
	XXX_unrecognized []byte
}

func (this *ReadKeyValueResponse) Reset() {
	*this = ReadKeyValueResponse{}
}

type ReadKeyValueResponse_KeyValue struct {
	Key              []byte "PB(bytes,1,req,name=key)"
	Value            []byte "PB(bytes,2,req,name=value)"
	XXX_unrecognized []byte
}

func (this *ReadKeyValueResponse_KeyValue) Reset() {
	*this = ReadKeyValueResponse_KeyValue{}
}

type ShuffleRequest struct {
	ShuffleName      *string                      "PB(bytes,1,req,name=shuffle_name)"
	Input            []*ShuffleInputSpecification "PB(bytes,2,rep,name=input)"
	Output           *ShuffleOutputSpecification  "PB(bytes,3,req,name=output)"
	ShuffleSizeBytes *int64                       "PB(varint,4,req,name=shuffle_size_bytes)"
	XXX_unrecognized []byte
}

func (this *ShuffleRequest) Reset() {
	*this = ShuffleRequest{}
}

type ShuffleResponse struct {
	XXX_unrecognized []byte
}

func (this *ShuffleResponse) Reset() {
	*this = ShuffleResponse{}
}

type GetShuffleStatusRequest struct {
	ShuffleName      *string "PB(bytes,1,req,name=shuffle_name)"
	XXX_unrecognized []byte
}

func (this *GetShuffleStatusRequest) Reset() {
	*this = GetShuffleStatusRequest{}
}

type GetShuffleStatusResponse struct {
	Status           *ShuffleEnums_Status "PB(varint,1,req,name=status,enum=files.ShuffleEnums_Status)"
	Description      *string              "PB(bytes,2,opt,name=description)"
	XXX_unrecognized []byte
}

func (this *GetShuffleStatusResponse) Reset() {
	*this = GetShuffleStatusResponse{}
}

func init() {
	proto.RegisterEnum("files.ShuffleEnums_InputFormat", ShuffleEnums_InputFormat_name, ShuffleEnums_InputFormat_value)
	proto.RegisterEnum("files.ShuffleEnums_OutputFormat", ShuffleEnums_OutputFormat_name, ShuffleEnums_OutputFormat_value)
	proto.RegisterEnum("files.ShuffleEnums_Status", ShuffleEnums_Status_name, ShuffleEnums_Status_value)
	proto.RegisterEnum("files.FileServiceErrors_ErrorCode", FileServiceErrors_ErrorCode_name, FileServiceErrors_ErrorCode_value)
	proto.RegisterEnum("files.FileContentType_ContentType", FileContentType_ContentType_name, FileContentType_ContentType_value)
	proto.RegisterEnum("files.OpenRequest_OpenMode", OpenRequest_OpenMode_name, OpenRequest_OpenMode_value)
}
