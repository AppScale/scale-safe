// Code generated by protoc-gen-go from "taskqueue_service.proto"
// DO NOT EDIT!

package appengine

import proto "goprotobuf.googlecode.com/hg/proto"
import "math"
import "os"


// Reference proto, math & os imports to suppress error if they are not otherwise used.
var _ = proto.GetString
var _ = math.Inf
var _ os.Error


type TaskQueueServiceError_ErrorCode int32

const (
	TaskQueueServiceError_OK                              = 0
	TaskQueueServiceError_UNKNOWN_QUEUE                   = 1
	TaskQueueServiceError_TRANSIENT_ERROR                 = 2
	TaskQueueServiceError_INTERNAL_ERROR                  = 3
	TaskQueueServiceError_TASK_TOO_LARGE                  = 4
	TaskQueueServiceError_INVALID_TASK_NAME               = 5
	TaskQueueServiceError_INVALID_QUEUE_NAME              = 6
	TaskQueueServiceError_INVALID_URL                     = 7
	TaskQueueServiceError_INVALID_QUEUE_RATE              = 8
	TaskQueueServiceError_PERMISSION_DENIED               = 9
	TaskQueueServiceError_TASK_ALREADY_EXISTS             = 10
	TaskQueueServiceError_TOMBSTONED_TASK                 = 11
	TaskQueueServiceError_INVALID_ETA                     = 12
	TaskQueueServiceError_INVALID_REQUEST                 = 13
	TaskQueueServiceError_UNKNOWN_TASK                    = 14
	TaskQueueServiceError_TOMBSTONED_QUEUE                = 15
	TaskQueueServiceError_DUPLICATE_TASK_NAME             = 16
	TaskQueueServiceError_SKIPPED                         = 17
	TaskQueueServiceError_TOO_MANY_TASKS                  = 18
	TaskQueueServiceError_INVALID_PAYLOAD                 = 19
	TaskQueueServiceError_INVALID_RETRY_PARAMETERS        = 20
	TaskQueueServiceError_INVALID_QUEUE_MODE              = 21
	TaskQueueServiceError_ACL_LOOKUP_ERROR                = 22
	TaskQueueServiceError_TRANSACTIONAL_REQUEST_TOO_LARGE = 23
	TaskQueueServiceError_INCORRECT_CREATOR_NAME          = 24
	TaskQueueServiceError_DATASTORE_ERROR                 = 10000
)

var TaskQueueServiceError_ErrorCode_name = map[int32]string{
	0:     "OK",
	1:     "UNKNOWN_QUEUE",
	2:     "TRANSIENT_ERROR",
	3:     "INTERNAL_ERROR",
	4:     "TASK_TOO_LARGE",
	5:     "INVALID_TASK_NAME",
	6:     "INVALID_QUEUE_NAME",
	7:     "INVALID_URL",
	8:     "INVALID_QUEUE_RATE",
	9:     "PERMISSION_DENIED",
	10:    "TASK_ALREADY_EXISTS",
	11:    "TOMBSTONED_TASK",
	12:    "INVALID_ETA",
	13:    "INVALID_REQUEST",
	14:    "UNKNOWN_TASK",
	15:    "TOMBSTONED_QUEUE",
	16:    "DUPLICATE_TASK_NAME",
	17:    "SKIPPED",
	18:    "TOO_MANY_TASKS",
	19:    "INVALID_PAYLOAD",
	20:    "INVALID_RETRY_PARAMETERS",
	21:    "INVALID_QUEUE_MODE",
	22:    "ACL_LOOKUP_ERROR",
	23:    "TRANSACTIONAL_REQUEST_TOO_LARGE",
	24:    "INCORRECT_CREATOR_NAME",
	10000: "DATASTORE_ERROR",
}
var TaskQueueServiceError_ErrorCode_value = map[string]int32{
	"OK":                              0,
	"UNKNOWN_QUEUE":                   1,
	"TRANSIENT_ERROR":                 2,
	"INTERNAL_ERROR":                  3,
	"TASK_TOO_LARGE":                  4,
	"INVALID_TASK_NAME":               5,
	"INVALID_QUEUE_NAME":              6,
	"INVALID_URL":                     7,
	"INVALID_QUEUE_RATE":              8,
	"PERMISSION_DENIED":               9,
	"TASK_ALREADY_EXISTS":             10,
	"TOMBSTONED_TASK":                 11,
	"INVALID_ETA":                     12,
	"INVALID_REQUEST":                 13,
	"UNKNOWN_TASK":                    14,
	"TOMBSTONED_QUEUE":                15,
	"DUPLICATE_TASK_NAME":             16,
	"SKIPPED":                         17,
	"TOO_MANY_TASKS":                  18,
	"INVALID_PAYLOAD":                 19,
	"INVALID_RETRY_PARAMETERS":        20,
	"INVALID_QUEUE_MODE":              21,
	"ACL_LOOKUP_ERROR":                22,
	"TRANSACTIONAL_REQUEST_TOO_LARGE": 23,
	"INCORRECT_CREATOR_NAME":          24,
	"DATASTORE_ERROR":                 10000,
}

func NewTaskQueueServiceError_ErrorCode(x int32) *TaskQueueServiceError_ErrorCode {
	e := TaskQueueServiceError_ErrorCode(x)
	return &e
}
func (x TaskQueueServiceError_ErrorCode) String() string {
	return proto.EnumName(TaskQueueServiceError_ErrorCode_name, int32(x))
}

type TaskQueueMode_Mode int32

const (
	TaskQueueMode_PUSH = 0
	TaskQueueMode_PULL = 1
)

var TaskQueueMode_Mode_name = map[int32]string{
	0: "PUSH",
	1: "PULL",
}
var TaskQueueMode_Mode_value = map[string]int32{
	"PUSH": 0,
	"PULL": 1,
}

func NewTaskQueueMode_Mode(x int32) *TaskQueueMode_Mode {
	e := TaskQueueMode_Mode(x)
	return &e
}
func (x TaskQueueMode_Mode) String() string {
	return proto.EnumName(TaskQueueMode_Mode_name, int32(x))
}

type TaskQueueAddRequest_RequestMethod int32

const (
	TaskQueueAddRequest_GET    = 1
	TaskQueueAddRequest_POST   = 2
	TaskQueueAddRequest_HEAD   = 3
	TaskQueueAddRequest_PUT    = 4
	TaskQueueAddRequest_DELETE = 5
)

var TaskQueueAddRequest_RequestMethod_name = map[int32]string{
	1: "GET",
	2: "POST",
	3: "HEAD",
	4: "PUT",
	5: "DELETE",
}
var TaskQueueAddRequest_RequestMethod_value = map[string]int32{
	"GET":    1,
	"POST":   2,
	"HEAD":   3,
	"PUT":    4,
	"DELETE": 5,
}

func NewTaskQueueAddRequest_RequestMethod(x int32) *TaskQueueAddRequest_RequestMethod {
	e := TaskQueueAddRequest_RequestMethod(x)
	return &e
}
func (x TaskQueueAddRequest_RequestMethod) String() string {
	return proto.EnumName(TaskQueueAddRequest_RequestMethod_name, int32(x))
}

type TaskQueueQueryTasksResponse_Task_RequestMethod int32

const (
	TaskQueueQueryTasksResponse_Task_GET    = 1
	TaskQueueQueryTasksResponse_Task_POST   = 2
	TaskQueueQueryTasksResponse_Task_HEAD   = 3
	TaskQueueQueryTasksResponse_Task_PUT    = 4
	TaskQueueQueryTasksResponse_Task_DELETE = 5
)

var TaskQueueQueryTasksResponse_Task_RequestMethod_name = map[int32]string{
	1: "GET",
	2: "POST",
	3: "HEAD",
	4: "PUT",
	5: "DELETE",
}
var TaskQueueQueryTasksResponse_Task_RequestMethod_value = map[string]int32{
	"GET":    1,
	"POST":   2,
	"HEAD":   3,
	"PUT":    4,
	"DELETE": 5,
}

func NewTaskQueueQueryTasksResponse_Task_RequestMethod(x int32) *TaskQueueQueryTasksResponse_Task_RequestMethod {
	e := TaskQueueQueryTasksResponse_Task_RequestMethod(x)
	return &e
}
func (x TaskQueueQueryTasksResponse_Task_RequestMethod) String() string {
	return proto.EnumName(TaskQueueQueryTasksResponse_Task_RequestMethod_name, int32(x))
}

type TaskQueueServiceError struct {
	XXX_unrecognized []byte
}

func (this *TaskQueueServiceError) Reset() {
	*this = TaskQueueServiceError{}
}

type TaskPayload struct {
	XXX_extensions   map[int32][]byte
	XXX_unrecognized []byte
}

func (this *TaskPayload) Reset() {
	*this = TaskPayload{}
}

func (this *TaskPayload) Marshal() ([]byte, os.Error) {
	return proto.MarshalMessageSet(this.ExtensionMap())
}
func (this *TaskPayload) Unmarshal(buf []byte) os.Error {
	return proto.UnmarshalMessageSet(buf, this.ExtensionMap())
}
// ensure TaskPayload satisfies proto.Marshaler and proto.Unmarshaler
var _ proto.Marshaler = (*TaskPayload)(nil)
var _ proto.Unmarshaler = (*TaskPayload)(nil)

var extRange_TaskPayload = []proto.ExtensionRange{
	proto.ExtensionRange{10, 536870911},
}

func (*TaskPayload) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_TaskPayload
}
func (this *TaskPayload) ExtensionMap() map[int32][]byte {
	if this.XXX_extensions == nil {
		this.XXX_extensions = make(map[int32][]byte)
	}
	return this.XXX_extensions
}

type TaskQueueRetryParameters struct {
	RetryLimit       *int32   "PB(varint,1,opt,name=retry_limit)"
	AgeLimitSec      *int64   "PB(varint,2,opt,name=age_limit_sec)"
	MinBackoffSec    *float64 "PB(fixed64,3,opt,name=min_backoff_sec,def=0.1)"
	MaxBackoffSec    *float64 "PB(fixed64,4,opt,name=max_backoff_sec,def=3600)"
	MaxDoublings     *int32   "PB(varint,5,opt,name=max_doublings,def=16)"
	XXX_unrecognized []byte
}

func (this *TaskQueueRetryParameters) Reset() {
	*this = TaskQueueRetryParameters{}
}

const Default_TaskQueueRetryParameters_MinBackoffSec float64 = 0.1
const Default_TaskQueueRetryParameters_MaxBackoffSec float64 = 3600
const Default_TaskQueueRetryParameters_MaxDoublings int32 = 16

type TaskQueueAcl struct {
	UserEmail        [][]byte "PB(bytes,1,rep,name=user_email)"
	XXX_unrecognized []byte
}

func (this *TaskQueueAcl) Reset() {
	*this = TaskQueueAcl{}
}

type TaskQueueHttpHeader struct {
	Key              []byte "PB(bytes,1,req,name=key)"
	Value            []byte "PB(bytes,2,req,name=value)"
	XXX_unrecognized []byte
}

func (this *TaskQueueHttpHeader) Reset() {
	*this = TaskQueueHttpHeader{}
}

type TaskQueueMode struct {
	XXX_unrecognized []byte
}

func (this *TaskQueueMode) Reset() {
	*this = TaskQueueMode{}
}

type TaskQueueAddRequest struct {
	QueueName        []byte                             "PB(bytes,1,req,name=queue_name)"
	TaskName         []byte                             "PB(bytes,2,req,name=task_name)"
	EtaUsec          *int64                             "PB(varint,3,req,name=eta_usec)"
	Method           *TaskQueueAddRequest_RequestMethod "PB(varint,5,opt,name=method,enum=appengine.TaskQueueAddRequest_RequestMethod,def=2)"
	Url              []byte                             "PB(bytes,4,opt,name=url)"
	Header           []*TaskQueueAddRequest_Header      "PB(group,6,rep,name=Header)"
	Body             []byte                             "PB(bytes,9,opt,name=body)"
	AppId            []byte                             "PB(bytes,11,opt,name=app_id)"
	Crontimetable    *TaskQueueAddRequest_CronTimetable "PB(group,12,opt,name=CronTimetable)"
	Description      []byte                             "PB(bytes,15,opt,name=description)"
	Payload          *TaskPayload                       "PB(bytes,16,opt,name=payload)"
	RetryParameters  *TaskQueueRetryParameters          "PB(bytes,17,opt,name=retry_parameters)"
	Mode             *TaskQueueMode_Mode                "PB(varint,18,opt,name=mode,enum=appengine.TaskQueueMode_Mode,def=0)"
	XXX_unrecognized []byte
}

func (this *TaskQueueAddRequest) Reset() {
	*this = TaskQueueAddRequest{}
}

const Default_TaskQueueAddRequest_Method TaskQueueAddRequest_RequestMethod = TaskQueueAddRequest_POST
const Default_TaskQueueAddRequest_Mode TaskQueueMode_Mode = TaskQueueMode_PUSH

type TaskQueueAddRequest_Header struct {
	Key              []byte "PB(bytes,7,req,name=key)"
	Value            []byte "PB(bytes,8,req,name=value)"
	XXX_unrecognized []byte
}

func (this *TaskQueueAddRequest_Header) Reset() {
	*this = TaskQueueAddRequest_Header{}
}

type TaskQueueAddRequest_CronTimetable struct {
	Schedule         []byte "PB(bytes,13,req,name=schedule)"
	Timezone         []byte "PB(bytes,14,req,name=timezone)"
	XXX_unrecognized []byte
}

func (this *TaskQueueAddRequest_CronTimetable) Reset() {
	*this = TaskQueueAddRequest_CronTimetable{}
}

type TaskQueueAddResponse struct {
	ChosenTaskName   []byte "PB(bytes,1,opt,name=chosen_task_name)"
	XXX_unrecognized []byte
}

func (this *TaskQueueAddResponse) Reset() {
	*this = TaskQueueAddResponse{}
}

type TaskQueueBulkAddRequest struct {
	AddRequest       []*TaskQueueAddRequest "PB(bytes,1,rep,name=add_request)"
	XXX_unrecognized []byte
}

func (this *TaskQueueBulkAddRequest) Reset() {
	*this = TaskQueueBulkAddRequest{}
}

type TaskQueueBulkAddResponse struct {
	Taskresult       []*TaskQueueBulkAddResponse_TaskResult "PB(group,1,rep,name=TaskResult)"
	XXX_unrecognized []byte
}

func (this *TaskQueueBulkAddResponse) Reset() {
	*this = TaskQueueBulkAddResponse{}
}

type TaskQueueBulkAddResponse_TaskResult struct {
	Result           *TaskQueueServiceError_ErrorCode "PB(varint,2,req,name=result,enum=appengine.TaskQueueServiceError_ErrorCode)"
	ChosenTaskName   []byte                           "PB(bytes,3,opt,name=chosen_task_name)"
	XXX_unrecognized []byte
}

func (this *TaskQueueBulkAddResponse_TaskResult) Reset() {
	*this = TaskQueueBulkAddResponse_TaskResult{}
}

type TaskQueueDeleteRequest struct {
	QueueName        []byte   "PB(bytes,1,req,name=queue_name)"
	TaskName         [][]byte "PB(bytes,2,rep,name=task_name)"
	AppId            []byte   "PB(bytes,3,opt,name=app_id)"
	XXX_unrecognized []byte
}

func (this *TaskQueueDeleteRequest) Reset() {
	*this = TaskQueueDeleteRequest{}
}

type TaskQueueDeleteResponse struct {
	Result           []TaskQueueServiceError_ErrorCode "PB(varint,3,rep,name=result,enum=appengine.TaskQueueServiceError_ErrorCode)"
	XXX_unrecognized []byte
}

func (this *TaskQueueDeleteResponse) Reset() {
	*this = TaskQueueDeleteResponse{}
}

type TaskQueueForceRunRequest struct {
	AppId            []byte "PB(bytes,1,req,name=app_id)"
	QueueName        []byte "PB(bytes,2,req,name=queue_name)"
	TaskName         []byte "PB(bytes,3,req,name=task_name)"
	XXX_unrecognized []byte
}

func (this *TaskQueueForceRunRequest) Reset() {
	*this = TaskQueueForceRunRequest{}
}

type TaskQueueForceRunResponse struct {
	Result           *TaskQueueServiceError_ErrorCode "PB(varint,3,req,name=result,enum=appengine.TaskQueueServiceError_ErrorCode)"
	XXX_unrecognized []byte
}

func (this *TaskQueueForceRunResponse) Reset() {
	*this = TaskQueueForceRunResponse{}
}

type TaskQueueUpdateQueueRequest struct {
	AppId                 []byte                    "PB(bytes,1,req,name=app_id)"
	QueueName             []byte                    "PB(bytes,2,req,name=queue_name)"
	BucketRefillPerSecond *float64                  "PB(fixed64,3,req,name=bucket_refill_per_second)"
	BucketCapacity        *int32                    "PB(varint,4,req,name=bucket_capacity)"
	UserSpecifiedRate     *string                   "PB(bytes,5,opt,name=user_specified_rate)"
	RetryParameters       *TaskQueueRetryParameters "PB(bytes,6,opt,name=retry_parameters)"
	MaxConcurrentRequests *int32                    "PB(varint,7,opt,name=max_concurrent_requests)"
	Mode                  *TaskQueueMode_Mode       "PB(varint,8,opt,name=mode,enum=appengine.TaskQueueMode_Mode,def=0)"
	Acl                   *TaskQueueAcl             "PB(bytes,9,opt,name=acl)"
	HeaderOverride        []*TaskQueueHttpHeader    "PB(bytes,10,rep,name=header_override)"
	XXX_unrecognized      []byte
}

func (this *TaskQueueUpdateQueueRequest) Reset() {
	*this = TaskQueueUpdateQueueRequest{}
}

const Default_TaskQueueUpdateQueueRequest_Mode TaskQueueMode_Mode = TaskQueueMode_PUSH

type TaskQueueUpdateQueueResponse struct {
	XXX_unrecognized []byte
}

func (this *TaskQueueUpdateQueueResponse) Reset() {
	*this = TaskQueueUpdateQueueResponse{}
}

type TaskQueueFetchQueuesRequest struct {
	AppId            []byte "PB(bytes,1,req,name=app_id)"
	MaxRows          *int32 "PB(varint,2,req,name=max_rows)"
	XXX_unrecognized []byte
}

func (this *TaskQueueFetchQueuesRequest) Reset() {
	*this = TaskQueueFetchQueuesRequest{}
}

type TaskQueueFetchQueuesResponse struct {
	Queue            []*TaskQueueFetchQueuesResponse_Queue "PB(group,1,rep,name=Queue)"
	XXX_unrecognized []byte
}

func (this *TaskQueueFetchQueuesResponse) Reset() {
	*this = TaskQueueFetchQueuesResponse{}
}

type TaskQueueFetchQueuesResponse_Queue struct {
	QueueName             []byte                    "PB(bytes,2,req,name=queue_name)"
	BucketRefillPerSecond *float64                  "PB(fixed64,3,req,name=bucket_refill_per_second)"
	BucketCapacity        *float64                  "PB(fixed64,4,req,name=bucket_capacity)"
	UserSpecifiedRate     *string                   "PB(bytes,5,opt,name=user_specified_rate)"
	Paused                *bool                     "PB(varint,6,req,name=paused,def=0)"
	RetryParameters       *TaskQueueRetryParameters "PB(bytes,7,opt,name=retry_parameters)"
	MaxConcurrentRequests *int32                    "PB(varint,8,opt,name=max_concurrent_requests)"
	Mode                  *TaskQueueMode_Mode       "PB(varint,9,opt,name=mode,enum=appengine.TaskQueueMode_Mode,def=0)"
	Acl                   *TaskQueueAcl             "PB(bytes,10,opt,name=acl)"
	HeaderOverride        []*TaskQueueHttpHeader    "PB(bytes,11,rep,name=header_override)"
	CreatorName           *string                   "PB(bytes,12,opt,name=creator_name,def=apphosting)"
	XXX_unrecognized      []byte
}

func (this *TaskQueueFetchQueuesResponse_Queue) Reset() {
	*this = TaskQueueFetchQueuesResponse_Queue{}
}

const Default_TaskQueueFetchQueuesResponse_Queue_Paused bool = false
const Default_TaskQueueFetchQueuesResponse_Queue_Mode TaskQueueMode_Mode = TaskQueueMode_PUSH
const Default_TaskQueueFetchQueuesResponse_Queue_CreatorName string = "apphosting"

type TaskQueueFetchQueueStatsRequest struct {
	AppId            []byte   "PB(bytes,1,req,name=app_id)"
	QueueName        [][]byte "PB(bytes,2,rep,name=queue_name)"
	MaxNumTasks      *int32   "PB(varint,3,req,name=max_num_tasks)"
	XXX_unrecognized []byte
}

func (this *TaskQueueFetchQueueStatsRequest) Reset() {
	*this = TaskQueueFetchQueueStatsRequest{}
}

type TaskQueueScannerQueueInfo struct {
	ExecutedLastMinute      *int64   "PB(varint,1,req,name=executed_last_minute)"
	ExecutedLastHour        *int64   "PB(varint,2,req,name=executed_last_hour)"
	SamplingDurationSeconds *float64 "PB(fixed64,3,req,name=sampling_duration_seconds)"
	RequestsInFlight        *int32   "PB(varint,4,opt,name=requests_in_flight)"
	XXX_unrecognized        []byte
}

func (this *TaskQueueScannerQueueInfo) Reset() {
	*this = TaskQueueScannerQueueInfo{}
}

type TaskQueueFetchQueueStatsResponse struct {
	Queuestats       []*TaskQueueFetchQueueStatsResponse_QueueStats "PB(group,1,rep,name=QueueStats)"
	XXX_unrecognized []byte
}

func (this *TaskQueueFetchQueueStatsResponse) Reset() {
	*this = TaskQueueFetchQueueStatsResponse{}
}

type TaskQueueFetchQueueStatsResponse_QueueStats struct {
	NumTasks         *int32                     "PB(varint,2,req,name=num_tasks)"
	OldestEtaUsec    *int64                     "PB(varint,3,req,name=oldest_eta_usec)"
	ScannerInfo      *TaskQueueScannerQueueInfo "PB(bytes,4,opt,name=scanner_info)"
	XXX_unrecognized []byte
}

func (this *TaskQueueFetchQueueStatsResponse_QueueStats) Reset() {
	*this = TaskQueueFetchQueueStatsResponse_QueueStats{}
}

type TaskQueuePauseQueueRequest struct {
	AppId            []byte "PB(bytes,1,req,name=app_id)"
	QueueName        []byte "PB(bytes,2,req,name=queue_name)"
	Pause            *bool  "PB(varint,3,req,name=pause)"
	XXX_unrecognized []byte
}

func (this *TaskQueuePauseQueueRequest) Reset() {
	*this = TaskQueuePauseQueueRequest{}
}

type TaskQueuePauseQueueResponse struct {
	XXX_unrecognized []byte
}

func (this *TaskQueuePauseQueueResponse) Reset() {
	*this = TaskQueuePauseQueueResponse{}
}

type TaskQueuePurgeQueueRequest struct {
	AppId            []byte "PB(bytes,1,opt,name=app_id)"
	QueueName        []byte "PB(bytes,2,req,name=queue_name)"
	XXX_unrecognized []byte
}

func (this *TaskQueuePurgeQueueRequest) Reset() {
	*this = TaskQueuePurgeQueueRequest{}
}

type TaskQueuePurgeQueueResponse struct {
	XXX_unrecognized []byte
}

func (this *TaskQueuePurgeQueueResponse) Reset() {
	*this = TaskQueuePurgeQueueResponse{}
}

type TaskQueueDeleteQueueRequest struct {
	AppId            []byte "PB(bytes,1,req,name=app_id)"
	QueueName        []byte "PB(bytes,2,req,name=queue_name)"
	XXX_unrecognized []byte
}

func (this *TaskQueueDeleteQueueRequest) Reset() {
	*this = TaskQueueDeleteQueueRequest{}
}

type TaskQueueDeleteQueueResponse struct {
	XXX_unrecognized []byte
}

func (this *TaskQueueDeleteQueueResponse) Reset() {
	*this = TaskQueueDeleteQueueResponse{}
}

type TaskQueueDeleteGroupRequest struct {
	AppId            []byte "PB(bytes,1,req,name=app_id)"
	XXX_unrecognized []byte
}

func (this *TaskQueueDeleteGroupRequest) Reset() {
	*this = TaskQueueDeleteGroupRequest{}
}

type TaskQueueDeleteGroupResponse struct {
	XXX_unrecognized []byte
}

func (this *TaskQueueDeleteGroupResponse) Reset() {
	*this = TaskQueueDeleteGroupResponse{}
}

type TaskQueueQueryTasksRequest struct {
	AppId            []byte "PB(bytes,1,req,name=app_id)"
	QueueName        []byte "PB(bytes,2,req,name=queue_name)"
	StartTaskName    []byte "PB(bytes,3,opt,name=start_task_name)"
	StartEtaUsec     *int64 "PB(varint,4,opt,name=start_eta_usec)"
	MaxRows          *int32 "PB(varint,5,opt,name=max_rows,def=1)"
	XXX_unrecognized []byte
}

func (this *TaskQueueQueryTasksRequest) Reset() {
	*this = TaskQueueQueryTasksRequest{}
}

const Default_TaskQueueQueryTasksRequest_MaxRows int32 = 1

type TaskQueueQueryTasksResponse struct {
	Task             []*TaskQueueQueryTasksResponse_Task "PB(group,1,rep,name=Task)"
	XXX_unrecognized []byte
}

func (this *TaskQueueQueryTasksResponse) Reset() {
	*this = TaskQueueQueryTasksResponse{}
}

type TaskQueueQueryTasksResponse_Task struct {
	TaskName         []byte                                          "PB(bytes,2,req,name=task_name)"
	EtaUsec          *int64                                          "PB(varint,3,req,name=eta_usec)"
	Url              []byte                                          "PB(bytes,4,opt,name=url)"
	Method           *TaskQueueQueryTasksResponse_Task_RequestMethod "PB(varint,5,opt,name=method,enum=appengine.TaskQueueQueryTasksResponse_Task_RequestMethod)"
	RetryCount       *int32                                          "PB(varint,6,opt,name=retry_count,def=0)"
	Header           []*TaskQueueQueryTasksResponse_Task_Header      "PB(group,7,rep,name=Header)"
	BodySize         *int32                                          "PB(varint,10,opt,name=body_size)"
	Body             []byte                                          "PB(bytes,11,opt,name=body)"
	CreationTimeUsec *int64                                          "PB(varint,12,req,name=creation_time_usec)"
	Crontimetable    *TaskQueueQueryTasksResponse_Task_CronTimetable "PB(group,13,opt,name=CronTimetable)"
	Runlog           *TaskQueueQueryTasksResponse_Task_RunLog        "PB(group,16,opt,name=RunLog)"
	Description      []byte                                          "PB(bytes,21,opt,name=description)"
	Payload          *TaskPayload                                    "PB(bytes,22,opt,name=payload)"
	RetryParameters  *TaskQueueRetryParameters                       "PB(bytes,23,opt,name=retry_parameters)"
	XXX_unrecognized []byte
}

func (this *TaskQueueQueryTasksResponse_Task) Reset() {
	*this = TaskQueueQueryTasksResponse_Task{}
}

const Default_TaskQueueQueryTasksResponse_Task_RetryCount int32 = 0

type TaskQueueQueryTasksResponse_Task_Header struct {
	Key              []byte "PB(bytes,8,req,name=key)"
	Value            []byte "PB(bytes,9,req,name=value)"
	XXX_unrecognized []byte
}

func (this *TaskQueueQueryTasksResponse_Task_Header) Reset() {
	*this = TaskQueueQueryTasksResponse_Task_Header{}
}

type TaskQueueQueryTasksResponse_Task_CronTimetable struct {
	Schedule         []byte "PB(bytes,14,req,name=schedule)"
	Timezone         []byte "PB(bytes,15,req,name=timezone)"
	XXX_unrecognized []byte
}

func (this *TaskQueueQueryTasksResponse_Task_CronTimetable) Reset() {
	*this = TaskQueueQueryTasksResponse_Task_CronTimetable{}
}

type TaskQueueQueryTasksResponse_Task_RunLog struct {
	DispatchedUsec   *int64 "PB(varint,17,req,name=dispatched_usec)"
	LagUsec          *int64 "PB(varint,18,req,name=lag_usec)"
	ElapsedUsec      *int64 "PB(varint,19,req,name=elapsed_usec)"
	ResponseCode     *int64 "PB(varint,20,opt,name=response_code)"
	XXX_unrecognized []byte
}

func (this *TaskQueueQueryTasksResponse_Task_RunLog) Reset() {
	*this = TaskQueueQueryTasksResponse_Task_RunLog{}
}

type TaskQueueFetchTaskRequest struct {
	AppId            []byte "PB(bytes,1,opt,name=app_id)"
	QueueName        []byte "PB(bytes,2,req,name=queue_name)"
	TaskName         []byte "PB(bytes,3,req,name=task_name)"
	XXX_unrecognized []byte
}

func (this *TaskQueueFetchTaskRequest) Reset() {
	*this = TaskQueueFetchTaskRequest{}
}

type TaskQueueFetchTaskResponse struct {
	Task             *TaskQueueQueryTasksResponse "PB(bytes,1,req,name=task)"
	XXX_unrecognized []byte
}

func (this *TaskQueueFetchTaskResponse) Reset() {
	*this = TaskQueueFetchTaskResponse{}
}

type TaskQueueUpdateStorageLimitRequest struct {
	AppId            []byte "PB(bytes,1,req,name=app_id)"
	Limit            *int64 "PB(varint,2,req,name=limit)"
	XXX_unrecognized []byte
}

func (this *TaskQueueUpdateStorageLimitRequest) Reset() {
	*this = TaskQueueUpdateStorageLimitRequest{}
}

type TaskQueueUpdateStorageLimitResponse struct {
	NewLimit         *int64 "PB(varint,1,req,name=new_limit)"
	XXX_unrecognized []byte
}

func (this *TaskQueueUpdateStorageLimitResponse) Reset() {
	*this = TaskQueueUpdateStorageLimitResponse{}
}

type TaskQueueQueryAndOwnTasksRequest struct {
	QueueName        []byte   "PB(bytes,1,req,name=queue_name)"
	LeaseSeconds     *float64 "PB(fixed64,2,req,name=lease_seconds)"
	MaxTasks         *int64   "PB(varint,3,req,name=max_tasks)"
	XXX_unrecognized []byte
}

func (this *TaskQueueQueryAndOwnTasksRequest) Reset() {
	*this = TaskQueueQueryAndOwnTasksRequest{}
}

type TaskQueueQueryAndOwnTasksResponse struct {
	Task             []*TaskQueueQueryAndOwnTasksResponse_Task "PB(group,1,rep,name=Task)"
	XXX_unrecognized []byte
}

func (this *TaskQueueQueryAndOwnTasksResponse) Reset() {
	*this = TaskQueueQueryAndOwnTasksResponse{}
}

type TaskQueueQueryAndOwnTasksResponse_Task struct {
	TaskName         []byte "PB(bytes,2,req,name=task_name)"
	EtaUsec          *int64 "PB(varint,3,req,name=eta_usec)"
	RetryCount       *int32 "PB(varint,4,opt,name=retry_count,def=0)"
	Body             []byte "PB(bytes,5,opt,name=body)"
	XXX_unrecognized []byte
}

func (this *TaskQueueQueryAndOwnTasksResponse_Task) Reset() {
	*this = TaskQueueQueryAndOwnTasksResponse_Task{}
}

const Default_TaskQueueQueryAndOwnTasksResponse_Task_RetryCount int32 = 0

func init() {
	proto.RegisterEnum("appengine.TaskQueueServiceError_ErrorCode", TaskQueueServiceError_ErrorCode_name, TaskQueueServiceError_ErrorCode_value)
	proto.RegisterEnum("appengine.TaskQueueMode_Mode", TaskQueueMode_Mode_name, TaskQueueMode_Mode_value)
	proto.RegisterEnum("appengine.TaskQueueAddRequest_RequestMethod", TaskQueueAddRequest_RequestMethod_name, TaskQueueAddRequest_RequestMethod_value)
	proto.RegisterEnum("appengine.TaskQueueQueryTasksResponse_Task_RequestMethod", TaskQueueQueryTasksResponse_Task_RequestMethod_name, TaskQueueQueryTasksResponse_Task_RequestMethod_value)
}
